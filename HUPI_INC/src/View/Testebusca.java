
package View;

import Banco.Conexao;
import Controller.ModeloTabela;
import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pierry
 */
public class Testebusca extends javax.swing.JFrame {
     Connection con1 = Conexao.getConnection();
            PreparedStatement stmt1 = null ;
            ResultSet rs1 =null ;
                  private String produto,cont,nome,nome2, listaSQL="", estab1, estab2,lista2="",dominio;
            private float preco1=0,preco2=0, total;
            private int contador=0, itensLista[],conta=0,idbairro=0, conta2=0;
            private ArrayList ListaProd = new ArrayList();
            private ArrayList Lista3 = new ArrayList();
            private ArrayList dados1 = new ArrayList();
            private ArrayList cidade1 = new ArrayList();
            private ArrayList bairro1 = new ArrayList();
            private ArrayList estabelecimento = new ArrayList();
            int i =0, count =1 ; 
           
            private String estado,cidade,bairro,cidadeb;
            
    /**
     * Creates new form Testebusca
     */
    public Testebusca() {
        initComponents();
        jTextField_resultado.grabFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton_buscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField_resultado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_venda = new javax.swing.JTable();
        jTextField_desc_pesq = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_estado = new javax.swing.JComboBox<>();
        jComboBox_cidade = new javax.swing.JComboBox<>();
        jComboBox_bairro = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_teste = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));

        jButton_buscar.setBackground(new java.awt.Color(0, 102, 255));
        jButton_buscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_buscar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_buscar.setText("buscar");
        jButton_buscar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton_buscar.setBorderPainted(false);
        jButton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_buscarActionPerformed(evt);
            }
        });

        jLabel2.setText("resultado");

        jTable_venda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable_venda.setCellSelectionEnabled(true);
        jTable_venda.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable_vendaComponentAdded(evt);
            }
        });
        jTable_venda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_vendaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable_vendaMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_venda);
        jTable_venda.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jTextField_desc_pesq.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jTextField_desc_pesq.setForeground(new java.awt.Color(153, 153, 153));
        jTextField_desc_pesq.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField_desc_pesq.setText("Pesquisar produto");
        jTextField_desc_pesq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField_desc_pesqMouseClicked(evt);
            }
        });
        jTextField_desc_pesq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_desc_pesqActionPerformed(evt);
            }
        });
        jTextField_desc_pesq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_desc_pesqKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_desc_pesqKeyReleased(evt);
            }
        });

        jLabel3.setText("Produto");

        jComboBox_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estado", "RJ", "SP" }));
        jComboBox_estado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_estadoItemStateChanged(evt);
            }
        });
        jComboBox_estado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_estadoMouseClicked(evt);
            }
        });
        jComboBox_estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_estadoActionPerformed(evt);
            }
        });

        jComboBox_cidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cidade", " " }));
        jComboBox_cidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_cidadeActionPerformed(evt);
            }
        });

        jComboBox_bairro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bairro\t", " " }));

        jTable_teste.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_teste.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_testeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_teste);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(10, 10, 10)
                                .addComponent(jTextField_desc_pesq, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jComboBox_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_cidade, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_bairro, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_desc_pesq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_cidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_bairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   
    private void jButton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_buscarActionPerformed
        int indexCidade, indexEstado, indexBairro;
            
            indexEstado = jComboBox_estado.getSelectedIndex();
            indexCidade = jComboBox_cidade.getSelectedIndex();
            indexBairro = jComboBox_bairro.getSelectedIndex();
            
            
           String estado, cidade, bairro, sql; 
           estado = (String) jComboBox_estado.getSelectedItem();
           cidade = (String) jComboBox_cidade.getSelectedItem();
           bairro = (String) jComboBox_bairro.getSelectedItem();
            
           System.out.println(estado+"["+indexEstado+"]");
           System.out.println(cidade+"["+indexCidade+"]");
           System.out.println(bairro+"["+indexBairro+"]");
            
           
           if(indexEstado ==0 && indexCidade ==0 && indexBairro == 0){
                JOptionPane.showMessageDialog(null, "selecione pelo menos 1 filtro");
                 System.out.println("dentro do if 1");
            }    
            else
            if(indexEstado >= 1 && indexCidade ==0 && indexBairro == 0){// FAZER BUSCA NO ESTADO TODO
                System.out.println("dentro do if 2");
             sql = "estado = '"+estado+"'";
             
             pesquisaProduto(sql);
             
            }else
           if(indexEstado >= 1 && indexCidade >= 1 && indexBairro == 0){ //FAZER BUSCA EM UMA CIDADE
             System.out.println("dentro do if 3");
               sql = "estado = '"+estado+"' and cidade = '"+cidade+"'";
            pesquisaProduto(sql);
               
           }else
           if(indexEstado >= 1 && indexCidade >=1 && indexBairro >= 1){ // FAZER BUSCA EM UM BAIRRO
              System.out.println("dentro do if 4");  
            sql = "estado = '"+estado+"' and cidade = '"+cidade+"' and bairro = '"+bairro+"'";
            pesquisaProduto(sql);  
           } 
                 
       listaSQL = listaSQL+",";
    }//GEN-LAST:event_jButton_buscarActionPerformed

    private void jTable_vendaComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable_vendaComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_vendaComponentAdded

    private void jTable_vendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_vendaMouseClicked
        if (evt.getClickCount() == 2) {
                   int linha = jTable_venda.getSelectedRow();
            int coluna = linha; // jTable_venda.getSelectedColumn();
            String valor = String.valueOf(jTable_venda.getValueAt(linha,0));
            ListaProd.add(valor);
            listaSQL = listaSQL + String.valueOf(ListaProd.get(contador))+",";
            System.out.println(listaSQL);
          
           
            contador++ ;
            String col = String.valueOf(jTable_venda.getValueAt(linha,1)) ;
            String id = String.valueOf(jTable_venda.getValueAt(linha,0)) ;
           // AdicionarTabelaLista(id,col);
            
            DefaultTableModel val = (DefaultTableModel) jTable_teste.getModel();
            val.addRow(new String[] {id, col});
            
            jTable_teste.setModel(val);
            jTable_teste.getColumnModel().getColumn(0).setPreferredWidth(83);
            jTable_teste.getColumnModel().getColumn(0).setResizable(false);
            jTable_teste.getColumnModel().getColumn(1).setPreferredWidth(250);
            jTable_teste.getColumnModel().getColumn(1).setResizable(false);
   
     
        jTable_teste.getTableHeader().setReorderingAllowed(false);
        jTable_teste.setAutoResizeMode(jTable_teste.AUTO_RESIZE_OFF);
        jTable_teste.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            
        }
    }//GEN-LAST:event_jTable_vendaMouseClicked

    private void jTextField_desc_pesqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField_desc_pesqMouseClicked
        jTextField_desc_pesq.setText("");
        jTextField_desc_pesq.setFont(new Font("Tahoma", Font.BOLD, 13));
        jTextField_desc_pesq.setForeground(new java.awt.Color(0, 0, 0));

    }//GEN-LAST:event_jTextField_desc_pesqMouseClicked

    private void jTextField_desc_pesqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_desc_pesqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_desc_pesqActionPerformed

    private void jTextField_desc_pesqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_desc_pesqKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

        }
    }//GEN-LAST:event_jTextField_desc_pesqKeyPressed

    private void jTextField_desc_pesqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_desc_pesqKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE && jTextField_desc_pesq.getText().equals("")){
            ApagaTabela();
        }else{

            PreencherTabela();
        }

    }//GEN-LAST:event_jTextField_desc_pesqKeyReleased
 
    
    private void jComboBox_estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_estadoActionPerformed
       
                       estado = (String) jComboBox_estado.getSelectedItem();
                 int index = jComboBox_estado.getSelectedIndex();
                System.out.println("index estado: "+index);
//                  if (index > 0 && count >1){ 
//                  jComboBox_cidade.removeAllItems();
//                 // jComboBox_cidade.removeItemAt(0);
                  
                    
//                  } 
                    
                    
                 if (index>0){  
                  
            try {
                         stmt1 = con1.prepareStatement("Select distinct cidade from analista where estado='"+estado+"'");
                         rs1 = stmt1.executeQuery();
                        cidade1.clear();
                        cidade1.add("cidade"); 
                        System.out.println("cidade1 antes do rs1: "+ cidade1);
                        while(rs1.next()){
                            ++i;
                         cidade =rs1.getString("cidade");   
                         cidade1.add(cidade);                                       
                        }
                         
                        
                        // rs1.close();
                         } catch (SQLException ex) {
                         Logger.getLogger(Testebusca.class.getName()).log(Level.SEVERE, null, ex);
                         }
                        System.out.println("cidade1 depois do rs1: "+ cidade1);
                        jComboBox_cidade.removeAllItems() ;
                        for(int x=0;x<=i;x++){
                        jComboBox_cidade.addItem(String.valueOf(cidade1.get(x)));
                            System.out.println("ComboBox_cidade = "+ cidade1.get(x));
                        }
                        i=0;
                        //System.out.println("count estado: "+count);
                        
                 }             
  
    }//GEN-LAST:event_jComboBox_estadoActionPerformed

    private void jComboBox_estadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_estadoMouseClicked
        
    
        
    }//GEN-LAST:event_jComboBox_estadoMouseClicked

    private void jComboBox_estadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_estadoItemStateChanged
        jComboBox_bairro.removeAllItems();
        jComboBox_bairro.addItem("bairro");
       
    }//GEN-LAST:event_jComboBox_estadoItemStateChanged

   public void pesquisaProduto(String SQL){
       try {
             listaSQL = listaSQL.substring(0, listaSQL.length() -1) ;
             stmt1 = con1.prepareStatement("select distinct(dominio) as estab from analista where "+SQL);
             System.out.println("select distinct(dominio) as estab from analista where "+SQL);
             System.out.println("listaSQL "+listaSQL);
             System.out.println("listaProd "+ListaProd);
             rs1 = stmt1.executeQuery();
            while(rs1.next()){
             //conta =Integer.valueOf(rs1.getString("contador"));
            estabelecimento.add(rs1.getString("estab"));
             }                                     
             rs1.close();
             } catch (SQLException ex) {
             Logger.getLogger(Testebusca.class.getName()).log(Level.SEVERE, null, ex);
             }
            
       
       System.out.println("estabelecimentos:"+estabelecimento+ " tamanho: "+estabelecimento.size());
                
          preco1 =0; preco2 =0;
          String estab = null;
         for (int x=0; x<estabelecimento.size(); x++){
             
              estab = (String) estabelecimento.get(x) ;
              System.out.println("loop ["+x+"] estabelecimento: "+ estabelecimento.get(x));

              try {
                 stmt1 = con1.prepareStatement("Select sum(preco) as total from "+estab+" where id in ("+listaSQL+")");
                 rs1 = stmt1.executeQuery();
            if(rs1.next()){
                       
                       preco1 = (rs1.getFloat("total"));
                        
                       estab1 = estab ;
            System.out.println("dentro do rs1.next() loop="+x);
            System.out.println(" valor pego= "+preco1+" menor valor: "+preco2);
            System.out.println("*****************************************");
                    if((preco2<preco1) && x==0){
                       preco2 = preco1; 
                       estab2 = estab1 ;                    
                  
                    }if((preco2 >preco1) && (x>=1) && (preco1 > 0)){
                       preco2= preco1 ;
                       estab2 = estab1;

                } 
                    
            }     
                rs1.close();
             } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
              
             }
         contador=contador+1;
         cont=String.valueOf(contador);
         nome2="estab";
         nome=nome2+cont;

         }

            jTextField_resultado.setText("menor preço: "+String.valueOf(preco2)+" encontrado no estab "+ estab2);
   }
    
    
    private void jTable_testeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_testeMouseClicked

         if (evt.getClickCount() == 2) {
             int linha = jTable_teste.getSelectedRow();
            int coluna = linha; // jTable_venda.getSelectedColumn();
             System.out.println("listaSQL antes do remove: "+listaSQL);
            System.out.println("lista fora do if: "+ListaProd);
            String valor = String.valueOf(jTable_teste.getValueAt(linha,0));
            ((DefaultTableModel) jTable_teste.getModel()).removeRow(jTable_teste.getSelectedRow());
            for(int x=0; x<contador; x++){
                if(ListaProd.get(x) == valor){
                    System.out.println("item removido: "+(ListaProd.get(x)));
                    ListaProd.remove(x);
                    System.out.println("lista depois do remove()"+ListaProd);
                }else
                    listaSQL = ListaProd.get(x)+"," ;
                
          
            System.out.println("listaSQl depois do remove"+listaSQL);
            }
         
             contador-- ;
         }
    }//GEN-LAST:event_jTable_testeMouseClicked

    private void jComboBox_cidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_cidadeActionPerformed
                              cidadeb = (String) jComboBox_cidade.getSelectedItem();
                      int index = jComboBox_cidade.getSelectedIndex();
           
                         if (index>0){  
                    
            try {
                         stmt1 = con1.prepareStatement("Select distinct bairro from analista where cidade='"+cidadeb+"'");
                         rs1 = stmt1.executeQuery();
                         bairro1.clear();
                         bairro1.add("bairro"); 
                         System.out.println("bairro1 antes do rs1: "+bairro1);
                        while(rs1.next()){
                            ++i;
                         bairro =rs1.getString("bairro");   
                         bairro1.add(bairro);                                       
                        }
                         
                        
                        // rs1.close();
                         } catch (SQLException ex) {
                         Logger.getLogger(Testebusca.class.getName()).log(Level.SEVERE, null, ex);
                         }
                        System.out.println("bairro1 antes do rs1: "+bairro1);
                        jComboBox_bairro.removeAllItems();
                        for(int x=0;x<=i;x++){
                        jComboBox_bairro.addItem(String.valueOf(bairro1.get(x)));
                             System.out.println("jComboBox_bairro = "+bairro1.get(x));
                        }
                        i=0;
        
                        count++;
                        System.out.println("count cidade: "+count);
                         }

    }//GEN-LAST:event_jComboBox_cidadeActionPerformed

    private void jTable_vendaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_vendaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable_vendaMouseEntered


    public void PreencherTabela() {
        
    
        ArrayList dados = new ArrayList();
        
        String [] Colunas = new String[]{"Codigo","Descrição"};
    
        
        try {
             stmt1 = con1.prepareStatement("select * from lista WHERE descricao like '"+ jTextField_desc_pesq.getText().trim() +"%'");
               rs1 = stmt1.executeQuery();
         while(rs1.next()){
             
              String descricao, id = String.valueOf(rs1.getInt("id"));
              descricao = rs1.getString("descricao");
                  dados.add(new Object[]{id, descricao }) ;
             
         }
           } catch (SQLException ex) {
              Logger.getLogger(CadastroProduto.class.getName()).log(Level.SEVERE, null, ex);
          }
        
            
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTable_venda.setModel(modelo);
        jTable_venda.getColumnModel().getColumn(0).setPreferredWidth(73);
        jTable_venda.getColumnModel().getColumn(0).setResizable(false);
        jTable_venda.getColumnModel().getColumn(1).setPreferredWidth(245);
        jTable_venda.getColumnModel().getColumn(1).setResizable(false);
    
     
        jTable_venda.getTableHeader().setReorderingAllowed(false);
        jTable_venda.setAutoResizeMode(jTable_venda.AUTO_RESIZE_OFF);
        jTable_venda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
   
    public void ApagaTabela(){
      String [] Colunas = new String[]{"Codigo","Descrição"};
    
       
         ArrayList dados = new ArrayList();
         
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTable_venda.setModel(modelo);
        jTable_venda.getColumnModel().getColumn(0).setPreferredWidth(120);
        jTable_venda.getColumnModel().getColumn(0).setResizable(false);
        jTable_venda.getColumnModel().getColumn(1).setPreferredWidth(265);
        jTable_venda.getColumnModel().getColumn(1).setResizable(false);
    
     
        jTable_venda.getTableHeader().setReorderingAllowed(false);
        jTable_venda.setAutoResizeMode(jTable_venda.AUTO_RESIZE_OFF);
        jTable_venda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Testebusca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Testebusca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Testebusca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Testebusca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Testebusca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_buscar;
    private javax.swing.JComboBox<String> jComboBox_bairro;
    private javax.swing.JComboBox<String> jComboBox_cidade;
    private javax.swing.JComboBox<String> jComboBox_estado;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_teste;
    private javax.swing.JTable jTable_venda;
    private javax.swing.JTextField jTextField_desc_pesq;
    private javax.swing.JTextField jTextField_resultado;
    // End of variables declaration//GEN-END:variables




}
